# This workflow will build and push a node.js application to an Azure Web App when a commit is pushed to your default branch.
#
# To configure this workflow:
#
# 1. Ensure you have enabled "SCM Basic Auth Publishing Credentials" temporarily in your Azure App Service's Configuration -> General settings
#    to download the Publish Profile. Remember to restart the App Service after enabling.
# 2. Download the Publish Profile for your Azure Web App from the Overview page of your Web App in the Azure Portal.
# 3. Create a secret in your GitHub repository named AZURE_WEBAPP_PUBLISH_PROFILE and paste the entire publish profile contents as its value.
#
# Important: For your Node.js app to run correctly on Azure App Service:
# - Ensure your backend/package.json has a "start" script, e.g., "start": "node server.js"
# - Ensure your Node.js app listens on process.env.PORT
# - Set all necessary environment variables (like DB connection strings, API keys) in Azure App Service -> Configuration -> Application settings.

name: Deploy MeerutMart Node.js Backend to Azure App Service

on:
  push:
    branches:
      - main # Workflow triggers on pushes to the 'main' branch.
  workflow_dispatch: # Allows manual triggering from the GitHub Actions tab.

env:
  AZURE_WEBAPP_NAME: meerutmart      # Your Azure App Service name
  AZURE_WEBAPP_PACKAGE_PATH: 'backend/' # Path to your Node.js project
  NODE_VERSION: '20.x'               # Node.js version

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Set up Node.js Environment
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}package-lock.json

    - name: Install production dependencies
      run: npm install --production
      working-directory: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

    - name: Run build and test scripts (if they exist)
      run: |
        npm run build --if-present
        npm run test --if-present
      working-directory: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

    - name: Create Deployment Artifact (Zip)
      run: |
        # Zips up all files, including node_modules, but excludes the .git folder
        zip -r deploy.zip . -x "*.git*"
      working-directory: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

    - name: Upload Artifact for Deployment
      uses: actions/upload-artifact@v4
      with:
        name: node-app
        path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}deploy.zip

  deploy:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
    - name: Download Artifact from Build Job
      uses: actions/download-artifact@v4
      with:
        name: node-app

    - name: 'Deploy to Azure WebApp'
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        slot-name: 'production'
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: './deploy.zip'